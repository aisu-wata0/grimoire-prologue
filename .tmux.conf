
# ## https://github.com/brantb/dotfiles/blob/master/tmux.conf

# # Set prefix to Ctrl-Space
# unbind C-b
# set -g prefix  C-Space
set -g prefix2 C-Space
# bind C-Space send-prefix -2
# bind Space send-prefix
# set -g prefix2 C-a                        # GNU-Screen compatible prefix

# # -- navigation ----------------------------------------------------------------

# bind -n [keys] [command]
# This binds the keys without needing the prefix
# bind -r [keys] [command]
# So you can use multiple times with one prefix

# # Manage windows
bind -n C-t new-window
bind C-t new-window

bind k confirm kill-pane

# # window navigation
# #
bind-key -n C-e next-window
bind-key -n C-w previous-window
# bind-key -n C-w last-window        # move to last active window

bind-key -r Tab last-window        # move to last active window
bind-key -r "'" last-window        # move to last active window
bind-key -r '"' last-window        # move to last active window

# # Doest work
# bind-key -n C-Tab last-window        # move to last active window

# unbind n
# unbind p

# split panes using [ and ]

bind-key [ split-window -v
bind-key ] split-window -h
bind-key C-[ split-window -v   # Does not work in linux somehow
bind-key C-] split-window -h
# unbind '"'
# unbind %

# Conflicts with Escape
# bind-key -n C-[ split-window -v    # Does not work in linux somehow
bind-key -n C-] split-window -h

# # Pane navigation
# bind -r C-j select-pane -L  # move left
# bind -r C-l select-pane -R  # move right
# bind -r C-i select-pane -U  # move up
# bind -r C-k select-pane -D  # move down
# # # switch panes using Alt-arrow no prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind -r > swap-pane -D       # swap current pane with the next one
bind -r < swap-pane -U       # swap current pane with the previous one

# Swap stuff with nums
# https://github.com/gotbletu/shownotes/blob/master/tmux_choose_tree_interactively.md
bind-key C-M-w command-prompt -p "Swap Current Window To? (e.g 3; 4; session_name:5)" "swap-window -t '%%'"
bind-key C-M-p command-prompt -p "Swap Current Pane To? (e.g 2.0; session_name:4.0)" "swap-pane -t '%%'"
bind-key M-p command-prompt -p "Move Current Pane To? (e.g 3.1; session_name:6.0)" "move-pane -t '%%'"

# # -- extra binds -------------------------------------------------------------------

# Reload config file
bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."


# # -- Mouse support  -------------------------------------------------------------------
set -g mouse on
# Sane scrolling
# This enables the scrolling with mouse and during the selection, it can go beyond the boundaries. Just hold shift when you're selecting.
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# # Copy and paste with a mouse with tmux
# https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux
# Linux only
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# # -- cfg -------------------------------------------------------------------

# set scrollback history 
set -g history-limit 100000

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# # -- display -------------------------------------------------------------------

set -g renumber-windows on    # renumber windows when a window is closed


set -g status-interval 2     # redraw status line every X seconds

# Show activity in background windows
setw -g monitor-activity on

# expect UTF-8 (tmux < 2.2)
set -q -g status-utf8 on
setw -q -g utf8 on

# 256 color support
set -g default-terminal "screen-256color"


# Update window title
# set -g set-titles on
# set -g set-titles-string '#T - #I:#W'

# rename window to reflect current state
# n:pane_current_path:pane_current_command
# https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory
set-option -g automatic-rename on
set-option -g automatic-rename-format  "#{?pane_in_mode,[tmux],#{b:pane_current_path}:#{pane_current_command}}#{?pane_dead,[dead],}"
# Default:
# set-option -g automatic-rename-format  "#{?pane_in_mode,[tmux],#{pane_current_command}}#{?pane_dead,[dead],}"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'


# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'jimeh/tmux-themepack'

set -g @tpm_plugins ' \
   tmux-plugins/tpm  \
   tmux-plugins/tmux-sensible  \
   tmux-plugins/tmux-copycat  \
   tmux-plugins/tmux-open  \
   jimeh/tmux-themepack  \
'

# # -- Theme -------------------------------------------------------------------

# set -g @themepack 'powerline/block/magenta'
set -g @themepack 'basic'
# if you remove this, remove the plugin jimeh/tmux-themepack

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
if-shell -b '[ -d "$HOME/.tmux/plugins/tpm" ]' \
  "run -b '~/.tmux/plugins/tpm/tpm'"